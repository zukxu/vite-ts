{
  "compilerOptions": {
    // 设置 TypeScript 的编译目标为 ESNext
    "target": "esnext",
    // 保留 JSX 语法（适用于 Vue3 和 React 项目）
    "jsx": "preserve",
    // 包含的库文件为 ESNext 和 DOM
    "lib": [
      "esnext",
      "dom"
    ],
    // 使用 class fields 的定义方式
    "useDefineForClassFields": true,
    // 启用实验性的装饰器
    "experimentalDecorators": true,
    // 设置基础路径
    "baseUrl": "./",
    // 设置模块系统为 ESNext
    "module": "esnext",
    // 模块解析策略为 Node.js
    "moduleResolution": "node",
    // 路径映射，用于简化模块导入
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    // 允许导入 JSON 模块
    "resolveJsonModule": true,
    // 包含的类型定义文件根目录
    "typeRoots": [
      "./node_modules/@types/",
      "./types"
    ],
    // 包含的类型定义文件
    "types": [
      "vite/client"
    ],
    // 允许编译 JavaScript 文件
    "allowJs": true,
    // 启用所有严格类型检查选项
    "strict": true,
    // 关闭严格的函数类型检查
    "strictFunctionTypes": false,
    // 允许隐式的 any 类型
    "noImplicitAny": false,
    // 禁止未使用的局部变量
    "noUnusedLocals": true,
    // 禁止未使用的参数
    "noUnusedParameters": true,
    // 输出目录（请保留这个属性，防止 tsconfig.json 文件报错）
    "outDir": "target",
    // 生成对应的 source map 文件
    "sourceMap": true,
    // 允许合成默认导入
    "allowSyntheticDefaultImports": true,
    // 启用 ES 模块互操作性
    "esModuleInterop": true,
    // 强制文件名一致的大小写
    "forceConsistentCasingInFileNames": true,
    // 跳过库文件的类型检查
    "skipLibCheck": true
  },
  // 包含的文件和目录
  "include": [
    "src",
    "types/**/*.d.ts",
    "auto-imports.d.ts",
    "components.d.ts"
    //    "src/types/auto-imports.d.ts",
    //    "src/types/auto-components.d.ts"
  ],
  "exclude": [
    // 排除的文件和目录
    "dist",
    "target",
    "node_modules"
  ]
}
